version: '3.8'

services:
  backend:
    build:
      context: ./backend/pop4u
      dockerfile: Dockerfile
    container_name: spring-backend
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - app-network
    depends_on:
      - mysql
      - redis
      - mongodb
      - fastapi

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network

  fastapi:
    build:
      context: ./ai-server/life-four-cuts
      dockerfile: Dockerfile
    container_name: life-four-cuts
    ports:
      - "8000:8000"
    env_file:
      - ./ai-server/life-four-cuts/.env
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=newpassword
      - MYSQL_DATABASE=pop4u
      - MYSQL_USER=newuser
      - MYSQL_PASSWORD=newpassword
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=pop4u
      - MONGO_INITDB_ROOT_PASSWORD=pop4u123
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
  mongo-data: